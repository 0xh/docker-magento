{"name":"Docker-magento","tagline":"Docker image for Magento","body":"# Docker image for Magento\r\n\r\nThis repo creates a Docker image for [Magento](http://magento.com/).\r\n\r\n## Magento versions\r\n\r\nVersion | Git branch | Tag name\r\n--------| ---------- |---------\r\n1.9.1.0 | master     | latest\r\n1.8.1.0 | 1.8.1.0    | 1.8.1.0\r\n1.7.0.2 | 1.7.0.2    | 1.7.0.2\r\n1.6.2.0 | 1.6.2.0    | 1.6.2.0\r\n\r\n## How to use\r\n\r\n### Use as standalone container\r\n\r\nYou can use `docker run` to run this image directly.\r\n\r\n```bash\r\ndocker run -p 80:80 alexcheng/magento\r\n```\r\n\r\nThen finish Magento installation using web UI. You need to have an existing MySQL server.\r\n\r\nMagento is installed into `/var/www/htdocs` folder.\r\n\r\n### Use Docker Compose\r\n\r\n[Docker Compose](https://docs.docker.com/compose/) is the recommended way to run this image with MySQL database.\r\n\r\nA sample `docker-compose.yml` can be found in this repo.\r\n\r\n```yaml\r\nweb:\r\n  image: alexcheng/magento\r\n  ports:\r\n    - \"80:80\"\r\n  links:\r\n    - mysql\r\n  env_file:\r\n    - env\r\nmysql:\r\n  image: mysql:5.6.23\r\n  env_file:\r\n    - env\r\n```\r\n\r\nThen use `docker-compose up -d` to start MySQL and Magento server.\r\n\r\n## Magento sample data\r\n\r\nInstallation script for Magento sample data is also provided.\r\n\r\n__Please note:__ Sample data must be installed __before__ Magento itself.\r\n\r\nUse `/usr/local/bin/install-sampledata` to install sample data for Magento.\r\n\r\n```bash\r\ndocker exec -it <container id> install-sampledata\r\n```\r\n\r\nMagento 1.9 sample data is compressed version from [Vinai/compressed-magento-sample-data](https://github.com/Vinai/compressed-magento-sample-data). Magento 1.6 - 1.8 uses the [official sample data](http://devdocs.magento.com/guides/m1x/ce18-ee113/ht_magento-ce-sample.data.html).\r\n\r\n## Magento installation script\r\n\r\nA Magento installation script is also provided as `/usr/local/bin/install-magento`. This script can install Magento without using web UI. This script requires certain environment variables to run:\r\n\r\nEnvironment variable      | Description | Default value (used by Docker Compose - `env` file)\r\n--------------------      | ----------- | ---------------------------\r\nMYSQL_HOST                | MySQL host  | mysql\r\nMYSQL_DATABASE            | MySQL db name for Magento | magento\r\nMYSQL_USER                | MySQL username | magento\r\nMYSQL_PASSWORD            | MySQL password | magento\r\nMAGENTO_LOCALE            | Magento locale | en_GB\r\nMAGENTO_TIMEZONE          | Magento timezone |Pacific/Auckland\r\nMAGENTO_DEFAULT_CURRENCY  | Magento default currency | NZD\r\nMAGENTO_URL               | Magento base url | http://mymagentostore.com\r\nMAGENTO_ADMIN_FIRSTNAME   | Magento admin firstname | Admin\r\nMAGENTO_ADMIN_LASTNAME    | Magento admin lastname | MyStore\r\nMAGENTO_ADMIN_EMAIL       | Magento admin email | amdin@mymagentostore.com\r\nMAGENTO_ADMIN_USERNAME    | Magento admin username | admin\r\nMAGENTO_ADMIN_PASSWORD    | Magento admin password | magentorocks1\r\n\r\nIf you want to use `install-magento` script and this images is started as a standalone container using `docker run`, make sure these environment variables are passed in `docker run` with `-e` switch.\r\n\r\nAfter Docker container started, use `docker ps` to find container id of image `alexcheng/magento`, then use `docker exec` to call `install-magento` script.\r\n\r\n```bash\r\ndocker exec -it <container id> install-magento\r\n```\r\n\r\nIf Docker Compose is used, you can just modify `env` file in the same directory of `docker-compose.yml` file to update those environment variables.\r\n\r\nAfter calling `install-magento`, Magento is installed and ready to use. Use provided admin username and password to log into Magento backend.\r\n\r\nIf you use default base url (http://mymagentostore.com) or other test url, you need to [modify your host file](http://www.howtogeek.com/howto/27350/beginner-geek-how-to-edit-your-hosts-file/) to map the host name to docker container. For Boot2Docker, use `boot2docker ip` to find the IP address.\r\n","google":"UA-64397833-1","note":"Don't delete this file! It's used internally to help with page regeneration."}