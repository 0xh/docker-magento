<session_save>db</session_save>
 <redis_session>                                          <!-- All options seen here are the defaults -->
     <host>127.0.0.1</host>                               <!-- Specify an absolute path if using a unix socket -->
     <port>6379</port>
     <password></password>                                <!-- Specify if your Redis server requires authentication -->
     <timeout>2.5</timeout>                               <!-- This is the Redis connection timeout, not the locking timeout -->
     <persistent></persistent>                            <!-- Specify unique string to enable persistent connections. E.g.: sess-db0; bugs with p$
     <db>0</db>                                           <!-- Redis database number; protection from accidental loss is improved by using a uniqu$
     <compression_threshold>2048</compression_threshold>  <!-- Set to 0 to disable compression (recommended when suhosin.session.encrypt=on); know$
     <compression_lib>gzip</compression_lib>              <!-- gzip, lzf, lz4 (https://github.com/kjdev/php-ext-lz4) or snappy (https://github.com$
     <log_level>1</log_level>                             <!-- 0 (emergency: system is unusable), 4 (warning; additional information, recommended)$
     <max_concurrency>6</max_concurrency>                 <!-- maximum number of processes that can wait for a lock on one session; for large prod$
     <break_after_frontend>5</break_after_frontend>       <!-- seconds to wait for a session lock in the frontend; not as critical as admin -->
     <break_after_adminhtml>30</break_after_adminhtml>
     <first_lifetime>600</first_lifetime>                 <!-- Lifetime of session for non-bots on the first write. 0 to disable -->
     <bot_first_lifetime>60</bot_first_lifetime>          <!-- Lifetime of session for bots on the first write. 0 to disable -->
     <bot_lifetime>7200</bot_lifetime>                    <!-- Lifetime of session for bots on subsequent writes. 0 to disable -->
     <disable_locking>0</disable_locking>                 <!-- Disable session locking entirely. -->
     <min_lifetime>60</min_lifetime>                      <!-- Set the minimum session lifetime -->
     <max_lifetime>2592000</max_lifetime>                 <!-- Set the maximum session lifetime -->
 </redis_session>
 <cache>
   <backend>Cm_Cache_Backend_Redis</backend>
   <backend_options>
     <server>127.0.0.1</server>                               <!-- or absolute path to unix socket -->
     <port>6379</port>
     <persistent></persistent>                                <!-- Specify unique string to enable persistent connections. E.g.: sess-db0; bugs wi$
     <database>0</database>                                   <!-- Redis database number; protection against accidental data loss is improved by n$
     <password></password>                                    <!-- Specify if your Redis server requires authentication -->
     <force_standalone>0</force_standalone>                   <!-- 0 for phpredis, 1 for standalone PHP -->
     <connect_retries>1</connect_retries>                     <!-- Reduces errors due to random connection failures; a value of 1 will not retry a$
     <read_timeout>10</read_timeout>                          <!-- Set read timeout duration; phpredis does not currently support setting read tim$
     <automatic_cleaning_factor>0</automatic_cleaning_factor> <!-- Disabled by default -->
     <compress_data>1</compress_data>                         <!-- 0-9 for compression level, recommended: 0 or 1 -->
     <compress_tags>1</compress_tags>                         <!-- 0-9 for compression level, recommended: 0 or 1 -->
     <compress_threshold>20480</compress_threshold>           <!-- Strings below this size will not be compressed -->
     <compression_lib>gzip</compression_lib>                  <!-- Support gzip, lzf, lz4 (https://github.com/kjdev/php-ext-lz4) or snappy (https:$
     <use_lua>0</use_lua>                                     <!-- Set to 1 if Lua scripts should be used for some operations -->
   </backend_options>
 </cache>
